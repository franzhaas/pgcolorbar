#!/usr/bin/env python
# -*- coding: utf-8 -*-
from __future__ import absolute_import

# To make a release follow these steps:
#   python setup.py sdist
# or better
#   python setup.py bdist_wheel
#   twine upload dist/cmlib-1.0.0rc1.tar.gz

# see https://packaging.python.org/en/latest/distributing.html
# https://packaging.python.org/guides/

import sys

def err(*args, **kwargs):
    sys.stderr.write(*args, **kwargs)
    sys.stderr.write('\n')


try:
    from setuptools import setup, find_packages
except ImportError:
    err("PgColorbar requires setuptools for installation. (https://pythonhosted.org/an_example_pypi_project/setuptools.html)")
    err("You can download and install it simply from https://pypi.org/project/ez_setup/")
    sys.exit(1)


if sys.version_info < (2,7) or ((3,0) <= sys.version_info < (3, 5)):
    err("PgColorbar requires Python 2.7 and higher or 3.5 and higher. "
        "It might work with earlier versions but this has not been tested.")
    sys.exit(1)


readme = open('README.rst').read()
history = open('HISTORY.rst').read().replace('.. :changelog:', '')

# From http://setuptools.readthedocs.io/en/latest/setuptools.html?highlight=install_requires#declaring-dependencies
# Using the install_requires option has three effects:
#  1) When your project is installed, either by using EasyInstall, setup.py install, or
#     setup.py develop, all of the dependencies not already installed will be located (via PyPI),
#     downloaded, built (if necessary), and installed.
#  2) Any scripts in your project will be installed with wrappers that verify the availability of
#     the specified dependencies at runtime, and ensure that the correct versions are added to
#     sys.path (e.g. if multiple versions have been installed).
#  3) Python Egg distributions will include a metadata file listing the dependencies.
#
# The reason for disabling install_requires is that, if a dependency is installed without pip or
# easy_install, the launcher script that is generated by setup.py gives the following error:
# pkg_resources.DistributionNotFound: The 'PyQt5' distribution was not found and is required by pgColorbar
# It was most likely caused by not having pip installed but it is unclear how to debug this and
# google didn't help. I don't know how to resolve these errors, so to save myself a lot of headaches
# I disabled automatic dependency installation.

# Declaring dependencies. DISABLED, see comment above.
install_requires = [
    "PyQt5 >= 5.6.0", # Don't know which version is minimal
]


from pgcolorbar import __version__

setup(
    name = 'pgcolorbar',
    version = __version__,
    description = "PgColorbar is a color bar for PyQtGraph image plots.",
    long_description = readme + '\n\n' + history,
    author = "Pepijn Kenter",
    author_email = "titusjan@gmail.com",
    license = "BSD",
    url="https://github.com/titusjan/pgcolorbar",
    packages = find_packages(exclude=('ingest',)),
    package_data = {'': ['HISTORY.rst'] },
    entry_points={'gui_scripts': ['pgcolorbar_demo = pgcolorbar.demo:main']},
    #install_requires = install_requires, # DISABLED. See coments above.
    zip_safe = False,
    classifiers = [
        'Development Status :: 5 - Production/Stable',
        'Environment :: X11 Applications :: Qt',
        'Intended Audience :: Developers',
        'Intended Audience :: End Users/Desktop',
        'Intended Audience :: Science/Research',
        'License :: OSI Approved :: BSD License',
        'Natural Language :: English',
        'Operating System :: MacOS :: MacOS X',
        'Operating System :: Microsoft :: Windows',
        'Operating System :: POSIX :: Linux',
        "Programming Language :: Python :: 2",
        'Programming Language :: Python :: 2.7',
        'Programming Language :: Python :: 3',
        'Programming Language :: Python :: 3.5',
        'Programming Language :: Python :: 3.6',
        'Programming Language :: Python :: 3.7',
        'Topic :: Software Development',
        'Topic :: Scientific/Engineering',
        'Topic :: Utilities',
    ],
    keywords = 'color-maps',
    #test_suite='tests',
    #tests_require=test_requirements
)
